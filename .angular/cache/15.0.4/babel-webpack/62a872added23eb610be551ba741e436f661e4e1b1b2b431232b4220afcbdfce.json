{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../booking.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nexport class CreateBookingComponent {\n  constructor(router, activatedRoute, bookingService) {\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.bookingService = bookingService;\n    this.booking = {\n      id: 100,\n      name: \"Your Name\",\n      roomNumber: 111,\n      startDate: new Date(),\n      endDate: new Date()\n    };\n  }\n  ngOnInit() {\n    if (this.router.url != '/create') {\n      let id = Number(this.activatedRoute.snapshot.paramMap.get('id'));\n      let bookingById = this.bookingService.getBookingById(id);\n      this.booking = bookingById;\n    }\n  }\n  save() {\n    let bookingById = this.bookingService.getBookingById(this.booking.id);\n    if (bookingById == null || bookingById == undefined) {\n      this.bookingService.addBooking(this.booking);\n    } else {\n      this.bookingService.updateBooking(this.booking);\n    }\n    this.router.navigate(['bookings']);\n  }\n  dateChanged(event, isStart) {\n    var val = event.target.value;\n    if (isStart) {\n      this.booking.startDate = new Date(val);\n    } else {\n      this.booking.endDate = new Date(val);\n    }\n  }\n}\nCreateBookingComponent.ɵfac = function CreateBookingComponent_Factory(t) {\n  return new (t || CreateBookingComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.BookingService));\n};\nCreateBookingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateBookingComponent,\n  selectors: [[\"app-create-booking\"]],\n  decls: 31,\n  vars: 11,\n  consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"mb-3\"], [1, \"form-label\"], [\"name\", \"id\", \"type\", \"number\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"roomNumber\", \"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"name\", \"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", 1, \"form-control\", 3, \"value\", \"input\"], [1, \"card-footer\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function CreateBookingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h5\");\n      i0.ɵɵtext(3, \"Create new Booking\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"form\")(6, \"div\", 3)(7, \"label\", 4);\n      i0.ɵɵtext(8, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateBookingComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.booking.id = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 4);\n      i0.ɵɵtext(12, \"Room number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateBookingComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.booking.roomNumber = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 3)(15, \"label\", 4);\n      i0.ɵɵtext(16, \"Guest Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateBookingComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.booking.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 3)(19, \"label\", 4);\n      i0.ɵɵtext(20, \"Start Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 8);\n      i0.ɵɵlistener(\"input\", function CreateBookingComponent_Template_input_input_21_listener($event) {\n        return ctx.dateChanged($event, true);\n      });\n      i0.ɵɵpipe(22, \"date\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 3)(24, \"label\", 4);\n      i0.ɵɵtext(25, \"End Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 8);\n      i0.ɵɵlistener(\"input\", function CreateBookingComponent_Template_input_input_26_listener($event) {\n        return ctx.dateChanged($event, false);\n      });\n      i0.ɵɵpipe(27, \"date\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(28, \"div\", 9)(29, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function CreateBookingComponent_Template_button_click_29_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(30, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.booking.id);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.booking.roomNumber);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.booking.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", i0.ɵɵpipeBind2(22, 5, ctx.booking.startDate, \"yyyy-MM-dd\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", i0.ɵɵpipeBind2(27, 8, ctx.booking.endDate, \"yyyy-MM-dd\"));\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i4.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["CreateBookingComponent","constructor","router","activatedRoute","bookingService","id","name","roomNumber","startDate","Date","endDate","ngOnInit","url","Number","snapshot","paramMap","get","bookingById","getBookingById","booking","save","undefined","addBooking","updateBooking","navigate","dateChanged","event","isStart","val","target","value","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\mlade\\angular\\hotel-app\\src\\app\\create-booking\\create-booking.component.ts","C:\\Users\\mlade\\angular\\hotel-app\\src\\app\\create-booking\\create-booking.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Booking } from '../booking';\r\nimport { Bookings } from '../mock-bookings';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BookingService } from '../booking.service';\r\n\r\n@Component({\r\n  selector: 'app-create-booking',\r\n  templateUrl: './create-booking.component.html',\r\n  styleUrls: ['./create-booking.component.css']\r\n})\r\nexport class CreateBookingComponent implements OnInit{\r\n\r\n  constructor(private router: Router, private activatedRoute: ActivatedRoute, private bookingService: BookingService){\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    if(this.router.url!= '/create'){\r\n      let id = Number(this.activatedRoute.snapshot.paramMap.get('id'));\r\n      let bookingById = this.bookingService.getBookingById(id);\r\n      this.booking = bookingById;\r\n    }\r\n\r\n  }\r\n\r\n   booking: Booking = {\r\n    id: 100,\r\n    name: \"Your Name\",\r\n    roomNumber: 111,\r\n    startDate: new Date(),\r\n    endDate: new Date()\r\n  }\r\n   \r\n  save(): void{\r\n\r\n    let bookingById = this.bookingService.getBookingById(this.booking.id);\r\n\r\n    if(bookingById == null || bookingById == undefined){\r\n      this.bookingService.addBooking(this.booking);\r\n    }else{\r\n      this.bookingService.updateBooking(this.booking);\r\n    }\r\n    \r\n    this.router.navigate(['bookings']);\r\n  }\r\n\r\n  dateChanged(event: Event, isStart: boolean){\r\n    var val = (event.target as HTMLInputElement).value;\r\n    if(isStart){\r\n      this.booking.startDate = new Date(val);\r\n    }else{\r\n      this.booking.endDate = new Date(val);\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"card-header\">\r\n<h5>Create new Booking</h5>\r\n    </div>\r\n    <div class=\"card-body\">\r\n        <form>\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label\">ID</label>\r\n              <input [(ngModel)] = \"booking.id\" name=\"id\" type=\"number\" class=\"form-control\" >\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label\">Room number</label>\r\n              <input  [(ngModel)] = \"booking.roomNumber\" name=\"roomNumber\"  type=\"text\" class=\"form-control\" >\r\n            </div>\r\n            <div class=\"mb-3\">\r\n                <label class=\"form-label\">Guest Name</label>\r\n                <input [(ngModel)] = \"booking.name\" name=\"name\"  type=\"text\" class=\"form-control\" >\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Start Date</label>\r\n                <input [value] = \"booking.startDate | date: 'yyyy-MM-dd' \"  (input)=\"dateChanged($event, true)\" type=\"date\" class=\"form-control\" >\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">End Date</label>\r\n                <input [value] = \"booking.endDate | date: 'yyyy-MM-dd'\"  (input)=\"dateChanged($event,false)\" type=\"date\" class=\"form-control\" >\r\n              </div>\r\n        </form>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n        <button (click)=\"save()\" type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n    </div>\r\n\r\n</div>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}