{"ast":null,"code":"import { Bookings } from './mock-bookings';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookingService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    // aus dem createDb() das bookings deswegen heißt es hier so in der Url. /api ist frei wählbar\n    this.bookingsUrl = \"/api/bookings\";\n  }\n  getBookings() {\n    var response = this.httpClient.get(this.bookingsUrl);\n    return response;\n  }\n  deleteBooking(booking) {\n    var response = this.httpClient.delete(this.bookingsUrl + \"/\" + booking.id);\n    return response;\n  }\n  getBookingById(id) {\n    var response = this.httpClient.get(this.bookingsUrl + \"/\" + id);\n    return response;\n  }\n  addBooking(booking) {\n    Bookings.push(booking);\n  }\n  updateBooking(booking) {\n    // let currentBooking = this.getBookingById(booking.id);\n    // currentBooking = booking;\n  }\n}\nBookingService.ɵfac = function BookingService_Factory(t) {\n  return new (t || BookingService)(i0.ɵɵinject(i1.HttpClient));\n};\nBookingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookingService,\n  factory: BookingService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,QAAQ,QAAQ,iBAAiB;;;AAO1C,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAE9B;IACA,gBAAW,GAAW,eAAe;EAHS;EAK9CC,WAAW;IAET,IAAIC,QAAQ,GAAG,IAAI,CAACF,UAAU,CAACG,GAAG,CAAY,IAAI,CAACC,WAAW,CAAC;IAE/D,OAAOF,QAAQ;EACjB;EAEAG,aAAa,CAACC,OAAgB;IAE5B,IAAIJ,QAAQ,GAAG,IAAI,CAACF,UAAU,CAACO,MAAM,CAAU,IAAI,CAACH,WAAW,GAAC,GAAG,GAACE,OAAO,CAACE,EAAE,CAAC;IAE/E,OAAON,QAAQ;EACjB;EAEAO,cAAc,CAACD,EAAU;IAEvB,IAAIN,QAAQ,GAAG,IAAI,CAACF,UAAU,CAACG,GAAG,CAAU,IAAI,CAACC,WAAW,GAAC,GAAG,GAACI,EAAE,CAAC;IAEpE,OAAON,QAAQ;EACjB;EAEAQ,UAAU,CAACJ,OAAgB;IACzBT,QAAQ,CAACc,IAAI,CAACL,OAAO,CAAC;EACxB;EAEAM,aAAa,CAACN,OAAgB;IAC7B;IACA;EAAA;;AAlCUR,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAe,SAAdf,cAAc;EAAAgB,YAFb;AAAM","names":["Bookings","BookingService","constructor","httpClient","getBookings","response","get","bookingsUrl","deleteBooking","booking","delete","id","getBookingById","addBooking","push","updateBooking","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\mlade\\angular\\hotel-app\\src\\app\\booking.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Booking } from './booking';\r\nimport { Bookings } from './mock-bookings';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookingService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  // aus dem createDb() das bookings deswegen heißt es hier so in der Url. /api ist frei wählbar\r\n  bookingsUrl: string = \"/api/bookings\"\r\n\r\n  getBookings(): Observable<Booking[]>{\r\n\r\n    var response = this.httpClient.get<Booking[]>(this.bookingsUrl);\r\n\r\n    return response;\r\n  }\r\n\r\n  deleteBooking(booking: Booking): Observable<Booking>{\r\n\r\n    var response = this.httpClient.delete<Booking>(this.bookingsUrl+\"/\"+booking.id);\r\n\r\n    return response;\r\n  }\r\n\r\n  getBookingById(id: number):Observable<Booking>{\r\n\r\n    var response = this.httpClient.get<Booking>(this.bookingsUrl+\"/\"+id);\r\n \r\n    return response;\r\n  }\r\n\r\n  addBooking(booking: Booking): void{\r\n    Bookings.push(booking);\r\n  }\r\n\r\n  updateBooking(booking: Booking): void {\r\n   // let currentBooking = this.getBookingById(booking.id);\r\n   // currentBooking = booking;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}